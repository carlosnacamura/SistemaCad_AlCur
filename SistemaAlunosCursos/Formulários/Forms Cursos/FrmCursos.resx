<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>