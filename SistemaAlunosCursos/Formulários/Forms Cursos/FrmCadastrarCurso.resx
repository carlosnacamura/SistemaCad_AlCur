<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>